{
  "name": "Sonar-prope-plugin",
  "tagline": "A SonarQube plugin for computing portability metrics for BPEL processes",
  "body": "# sonar-portability-plugin\r\n\r\n[![Build Status](https://travis-ci.org/uniba-dsg/sonar-prope-plugin.svg?branch=master)](https://travis-ci.org/uniba-dsg/sonar-prope-plugin)\r\n\r\nsonar-portability-plugin is a plugin to the [SonarQube](http://www.sonarqube.org/) code quality management platform that calculates portability metrics for BPEL 2.0 processes. It computes the metrics using the [prope](https://github.com/uniba-dsg/prope) metrics suite and presents them in a portability dashboard in the SonarQube server. It offers support for drilling down on file level and  highlighting issues in code with short issue description. \r\n\r\n\r\n## Software Requirements\r\n- JDK 1.8.X\r\n  - `JAVA_HOME` should point to the jdk directory\r\n  - `PATH` should include `JAVA_HOME/bin`\r\n- apache maven 3.3.X\r\n- sonarqube-5.X.X\r\n- sonar-runner-dist-2.4 or other analyzer (ant, maven)\r\n- sonarqube has its embedded H2 database, but it is not able to export or save data from there. If data should be able to export and make a backup of them it is recommended to install an other database like MySQL 5.x, Oracle 10g/11g, PostgreSQL 8.x/9.x, Microsoft SQLServer 2008/2012.\r\n  \r\n## Licensing\r\n[MIT license](http://opensource.org/licenses/MIT)\r\n\r\n## Usage\r\n1. install all required software\r\n2. build the plugin as a jar file (using `mvn install`)\r\n3. copy the in the downloads directory of sonarqube server (sonarqube-5.x.x/extensions/downloads)\r\n4. start sonarqube server (sonarqube-5.x.x/bin/`your system software`)\r\n5. login as admin and activate all bpel rules in the rules tab\r\n6. analyze a BPEL project (with e.g. sonar-runner) and open portability dashboard (on sonarqube server) for this project\r\n\r\nPlease note:\r\n- SonarQube server has to be running before starting an analysis\r\n- Projects that should be analyzed by SonarQube require a properties file in project root folder.\r\nproperties file should at least look like this:\r\n\r\n```\r\n# Required metadata\r\nsonar.projectKey=test-bpel\r\nsonar.projectName=test-bpel\r\nsonar.projectVersion=1.0\r\n# Comma-seperated paths to directories with sources (required)\r\nsonar.sources=src\r\n\r\n# Language\r\nsonar.language=bpel\r\n\r\n# Ecoding of the source files\r\nsonar.sourceEncoding=UTF-8\r\n```\r\n\r\n\r\n\r\n## Project Structure\r\n\r\n| Package     | Purpose          | \r\n| ------------- |-------------| \r\n| `src/main/java/de/uniba/dsg/sonar/portability `     | plugin start class and all defined metrics| \r\n| `src/main/java/de/uniba/dsg/sonar/portability/batch `     | classes that implement the main workflow, such as traversing a directory structure and triggering the metrics computation and reporting | \r\n| `src/main/java/de/uniba/dsg/sonar/portability/checks`     | check for existing BPEL repository in SonarQube| \r\n| `src/main/java/de/uniba/dsg/sonar/portability/language`     | class(es) that defines the languages that can analyzed with the plugin| \r\n| `src/main/java/de/uniba/dsg/sonar/portability/rules`     | classes to define profiles and rules| \r\n| `src/main/java/de/uniba/dsg/sonar/portability/ui`     | class to create the dashboard with the calculated metrics| \r\n| `src/main/de/uniba/dsg/sonar/portability/utility`     | class for helping to calculate metrics| \r\n\r\n\r\n## Authors \r\n\r\nMatthias Weiß, [Jörg Lenhard](https://joerglenhard.wordpress.com/)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}